name: Deploy to shinyapps.io using a matrix
on:
  workflow_dispatch:
jobs:
  tests:
    strategy:
      matrix:
        r: ['4.3.0']
        os: ['ubuntu-latest']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r }}

      - name: Install curl
        run: sudo apt-get install libcurl4-openssl-dev

      - name: Activate renv
        uses: r-lib/actions/setup-renv@v2
        with:
          cache-version: 0

      - name: Run testthat
        run: Rscript -e "source('control/testthat.R')"

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    env:
      SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
      SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.0'

      - name: Install curl
        run: sudo apt-get install libcurl4-openssl-dev

      - name: Activate renv
        uses: r-lib/actions/setup-renv@v2

      - name: Create and populate .Renviron file
        id: renviron-creation
        run: |
          echo SHINYAPPS_TOKEN="$SHINYAPPS_TOKEN" >> ~/.Renviron
          echo SHINYAPPS_SECRET="$SHINYAPPS_SECRET" >> ~/.Renviron

      - name: Deploy
        id: deployment
        if: steps.renviron-creation.outcome == 'success'
        run: Rscript -e "source('control/deploy.R')"

      - name: Clean up .Renviron
        if: always()
        run: rm ~/.Renviron
